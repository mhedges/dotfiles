"Vundle stuff
set nocompatible              " required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#rc()

" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" We could also add repositories with a '.git' extension
Plugin 'scrooloose/nerdtree.git'
Plugin 'jiangxincode/vim-kite'

" To get plugins from Vim Scripts, you can reference the plugin
" by name as it appears on the site
Plugin 'scrooloose/syntastic'
Plugin 'altercation/vim-colors-solarized'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-commentary'
Plugin 'rosenfeld/conque-term'
Plugin 'lervag/vimtex'
Plugin 'valloric/youcompleteme'

"vim-fugitive turn filetype identification back on
filetype plugin indent on
filetype plugin on


" When started as 'evim', evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

if has("vms")
  set nobackup		" do not keep a backup file, use versions instead
else
  set backup		" keep a backup file
endif
set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mouse=a
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  " Also don't do it when the mark is in the first line, that is the default
  " position when opening a file.
  autocmd BufReadPost *
    \ if line("'\"") > 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

else

  set autoindent		" always set autoindenting on

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis
		  \ | wincmd p | diffthis
endif

" set our tabs to four spaces
set ts=4

" " set auto-indenting on for programming
set ai
"
" " turn off compatibility with the old vi
" set nocompatible
"
" turn on the 'visual bell' - which is much quieter than the 'audio blink'
" set vb
"
" " do not highlight words when searching for them. it's distracting.
" set nohlsearch
"
" " automatically show matching brackets. works like it does in bbedit.
set showmatch
"
" " do NOT put a carriage return at the end of the last line! if you are
" programming
" " for the web the default will cause http headers to be sent. that's bad.
"set binary noeol
"
" " set autoformatting for text breaks
"setl fo=aw2tq
" " make that backspace key work the way it should
set backspace=indent,eol,start

" " set textwrappigng to 80 characters
set textwidth=80

" " set text wrap
"set wrap linebreak nolist

" " set vim clipboard to system clipboard
set clipboard=unnamed

"" vim-latex settings:
"
"" IMPORTANT: win32 users will need to have 'shellslash' set so that latex
"" can be called correctly.
"set shellslash
"
"" IMPORTANT: grep will sometimes skip displaying the file name if you
"" search in a singe file. This will confuse Latex-Suite. Set your grep
"" program to always generate a file-name.
"set grepprg=grep\ -nH\ $*
"
"" OPTIONAL: This enables automatic indentation as you type.
"filetype indent on
"
"" OPTIONAL: Starting with Vim 7, the filetype of empty .tex files defaults to
"" 'plaintex' instead of 'tex', which results in vim-latex not being loaded.
"" The following changes the default filetype back to 'tex':
"let g:tex_flavor='latex'
"" this is mostly a matter of taste. but LaTeX looks good with just a bit
"" of indentation.
set sw=2
" TIP: if you write your \label's as \label{fig:something}, then if you
" type in \ref{fig: and press <C-n> you will automatically cycle through
" all the figure labels. Very useful!
set iskeyword+=:

au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix |

let g:livepreview_previewer = 'open -a Skim'
"autocmd Filetype tex setl updatetime=10
set ut=5000

" Solarized
"set t_Co=16
syntax enable
"set background=light
"colorscheme solarized

" Syntastic
let g:syntastic_python_checkers = ['python']

" No highlight on search
set nohlsearch

" Remap ESC
inoremap jj <ESC>  

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
